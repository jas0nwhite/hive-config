classdef Chem < uint32 & hive.cfg.ChemBase
    % Chemicals for use in HIVE treatment '011-008-001-000-000'
    % 
    % It is convenient to subclass uint32 so that the chemical literals can be
    % used as an index into a matrix, but we can't add properties to uint32.
    % 
    % Therefore, we will add methods that perform lookups into persistent arrays
    % which hold the properties for each chemical literal.
    % 
    % This code was generated by scala.
    
    % 
    % Valid chemicals for this treatment
    % 
    enumeration
        Dopamine(1)
        Serotonin(2)
        pH(3)
        Norepinephrine(4)
        HydroxyindoleaceticAcid(5)
        KynurenicAcid(6)
        Acetylcholine(7)
        Glutamate(8)
    end
    
    methods
        function n = ix(this)
            % IX returns the index of this Chem
            
            n = uint32(this);
        end
        
        function s = colName(this)
            % COLNAME returns the column name of this Chem
            
            persistent a;
            a = {'DA', '5HT', 'pH', 'NE', '5HIAA', 'KYNA', 'ACh', 'Glu'};
            s = a{this.ix};
        end
        
        function s = name(this)
            % NAME returns the name of this Chem
            
            s = char(this);
        end
        
        function s = label(this)
            % LABEL returns the label of this Chem
            
            persistent a;
            a = {'DA', '5-HT', 'pH', 'NE', '5-HIAA', 'KYNA', 'ACh', 'Glu'};
            s = a{this.ix};
        end
        
        function s = prefix(this)
            % PREFIX returns the prefix of this Chem, suitable for variable or file names
            
            persistent a;
            a = {'da', 'ht', 'ph', 'ne', 'hiaa', 'kyna', 'ach', 'glu'};
            s = a{this.ix};
        end
        
        function s = units(this)
            % UNITS returns the units of this Chem
            
            persistent a;
            a = {'nM', 'nM', '', 'nM', 'nM', 'nM', 'nM', 'nM'};
            s = a{this.ix};
        end
        
        function n = neutral(this)
            % NEUTRAL returns the neutral concentration of this Chem
            
            persistent a;
            a = [0.0, 0.0, 7.4, 0.0, 0.0, 0.0, 0.0, 0.0];
            n = a(this.ix);
        end
        
        function s = format(this, pattern)
            % FORMAT returns the pattern with fieldnames replaced with this chemical's information
            
            s = pattern;
            
            s = strrep(s, '{ix}', int2str(this.ix));
            
            s = strrep(s, '{ColName}', this.colName);
            s = strrep(s, '{colname}', lower(this.colName));
            s = strrep(s, '{COLNAME}', upper(this.colName));
            
            s = strrep(s, '{Name}', this.name);
            s = strrep(s, '{name}', lower(this.name));
            s = strrep(s, '{NAME}', upper(this.name));
            
            s = strrep(s, '{Label}', this.label);
            s = strrep(s, '{label}', lower(this.label));
            s = strrep(s, '{LABEL}', upper(this.label));
            
            s = strrep(s, '{Prefix}', this.prefix);
            s = strrep(s, '{prefix}', lower(this.prefix));
            s = strrep(s, '{PREFIX}', upper(this.prefix));
        end
        
    end
    
end
